plugins {
    id "scala"
    id "maven-publish"

    id "nebula.provided-base" version "3.0.3"
    id "nebula.dependency-lock" version "4.3.2"

    id "org.ajoberstar.grgit" version "1.6.0"
    id "com.github.maiflai.scalatest" version "0.14"
}

sourceCompatibility = 1.7
targetCompatibility = 1.7

def scalaMajor = "2.11"

configurations {
    scripts
}

ext {
    git = org.ajoberstar.grgit.Grgit.open(currentDir: project.projectDir)
    revision = git.head().id
    gitVersion = git.describe().replaceFirst(/^(?i)v/, "")
    testWorkingDir = new File(buildDir, "test-tmp")
    hadoopVersion = "2.5.0-cdh5.3.2"
}

group = "com.napster.bi"
version = gitVersion
description = "Spark SQL App"

jar {
    manifest {
        attributes "Implementation-Title": description,
                "Implementation-Version": revision
    }
}

repositories {
    mavenLocal()
    maven { url "http://maven01.internal.rhapsody.com/nexus/content/groups/public" }
}

dependencies {
    compile "com.github.scopt:scopt_${scalaMajor}:3.5.0"
    compile "com.typesafe.scala-logging:scala-logging-api_${scalaMajor}:2.1.2"
    compile "com.typesafe.scala-logging:scala-logging-slf4j_${scalaMajor}:2.1.2"

    compile "joda-time:joda-time:2.9.3"
    compile "org.joda:joda-convert:1.8.1"

    compile "com.napster.bi:app-config:2.0.+"

    compile "com.google.guava:guava:16.0.1"

    provided("org.apache.spark:spark-hive_$scalaMajor:2.0.1-rhap") {
        exclude group: "com.google.guava", module: "guava"
        exclude group: "org.scalatest", module: "scalatest_$scalaMajor"
    }

    testCompile "org.scalatest:scalatest_$scalaMajor:3.0.1"
    testRuntime "org.pegdown:pegdown:1.4.2"

    testCompile "org.scalacheck:scalacheck_${scalaMajor}:1.13.4"
}

test.doFirst {
    testWorkingDir.mkdirs()
}

test {
    maxParallelForks = 1
    workingDir testWorkingDir
}

task scalaDocJar(type: Jar, dependsOn: scaladoc) {
    classifier = 'scaladoc'
    from scaladoc.destinationDir
}

task sourcesJar(type: Jar) {
    classifier = 'sources'
    from sourceSets.main.allSource
}

task wrapper(type: Wrapper) { gradleVersion = "3.3" }

publishing {
    repositories {
        maven {
            name "rhapsody"
            url "http://maven01.internal.rhapsody.com/nexus/content/repositories/releases"
            credentials {
                username "$mavenUser"
                password "$mavenPassword"
            }
        }
    }
    publications {
        maven(MavenPublication) {
            from components.java
            artifact(scalaDocJar) {
                classifier = 'scaladoc'
            }
            artifact(sourcesJar) {
                classifier = 'sources'
            }
        }
    }
}
